function[m, v] = integrate(fun, a, b, point_set)
    % -- [M, V] = integrate (FUN, A, B, POINT_SET)
    %     Integrate FUN in the standard parallelotope generated by the diagonal
    %     [A, B]. The POINT_SET matrix must have the same number of rows as A
    %     and B and must contain only elements from the unit interval. At each
    %     step, a new row vector of POINT_SET is chosen, scaled into the
    %     parallelotope and plugged into FUN.
    %
    %     M (short of mean) is the approximate value of the integral and V is
    %     the Welford-corrected variance.
    n = size(point_set, 1);
    vol = prod(b - a);

    m = 0;
    v = 0;

    for i = 1:n
        x = a + point_set(i, :) .* (b - a);
        y = fun(x) * vol;

        scaled_mean = n/i * m;
        v += (y - scaled_mean) * ((i+1)/i * y - scaled_mean) / (n-1);
        m += y / n;
    end
end

%!test
%! result = integrate(@exp, 0, 1, linspace(0, 1)');
%! assert(result, e - 1, 1e-2);

%!test
%! [X Y] = ndgrid(linspace(0, 1, 10), linspace(0, 1, 10));
%! domain = [X(:) Y(:)];
%! result = integrate(@prod, [0 0], [1 1], domain);
%! assert(result, 1/4, 1e-2);
